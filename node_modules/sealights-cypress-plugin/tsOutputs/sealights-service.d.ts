declare class TestSessionService {
    private static instance;
    private apiToken;
    private baseUrl;
    private buildSessionId;
    private labId;
    private testStage;
    private testSessionId;
    private testSessionsV1Instance;
    private testSessionsV2Instance;
    private excludedTests;
    private configurationError;
    private constructor();
    static getInstance(): TestSessionService;
    setConfig(apiToken: string, testStage: string, buildSessionId: string, labId?: string): void;
    private createInstanceV1;
    private createInstanceV2;
    createTestSession(testStage?: string): Promise<void>;
    endTestSession(): Promise<void>;
    getTestRecommendations(): Promise<Record<string, string>>;
    sendTestEvent(name: string, start: number, end: number, status: string): Promise<void>;
    get _testSessionId(): string;
    get _excludedTests(): Record<string, string>;
    static runServiceMethodSafe(_: unknown, propertyKey: string, descriptor: PropertyDescriptor): PropertyDescriptor;
}
export declare const SealightsTestSessionService: TestSessionService;
export {};
